import 'package:flutter/material.dart';
import 'package:gap/gap.dart';
import 'package:get/get.dart';
import 'package:todo_infinity_app/core/styles/extensions.dart';
import 'package:todo_infinity_app/core/values/colors.dart';
import 'package:todo_infinity_app/core/values/dimens.dart';
import 'package:todo_infinity_app/core/values/icons.dart';
import 'package:todo_infinity_app/features/main/main_category/view_model/main_category_view_model.dart';
import 'package:todo_infinity_app/features/task/view_model/task_view_model.dart';


class TodoCategory extends StatelessWidget {
  const TodoCategory({
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return GetBuilder<TaskViewModel>(
      builder: (taskVM) {
        return GestureDetector(
          onTap: () {
            final MainCategoryViewModel categoryVM =
                Get.put(MainCategoryViewModel());
            Get.bottomSheet(
                backgroundColor: Colors.transparent,
                Container(
                  padding:
                      const EdgeInsets.symmetric(horizontal: 12, vertical: 16),
                  height: AppDimens.sizeOfDevice(context).height * 0.45,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(AppDimens.radius),
                    color: Colors.white,
                  ),
                  width: AppDimens.sizeOfDevice(context).width,
                  child: Column(
                    children: [
                      Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Align(
                            alignment: Alignment.centerRight,
                            child: Text(
                              'تغییر دسته بندی :',
                              style: const TextStyle(
                                  color: Colors.grey, fontSize: 14),
                            ),
                          ),
                          IconButton(
                            onPressed: () {},
                            icon: const Icon(Icons.close),
                            color: Colors.grey,
                          )
                        ],
                      ),
                      Gap(AppDimens.high),
                      GridView.builder(
                        gridDelegate:
                            const SliverGridDelegateWithFixedCrossAxisCount(
                                crossAxisCount: 3,
                                crossAxisSpacing: 30,
                                mainAxisExtent: 40,
                                mainAxisSpacing: 12),
                        shrinkWrap: true,
                        itemBuilder: (context, index) => Container(
                          alignment: Alignment.center,
                          width: 100,
                          padding: const EdgeInsets.all(8.0),
                          decoration: BoxDecoration(
                            borderRadius:
                                BorderRadius.circular(AppDimens.radius),
                            color: colorList[categoryVM
                                    .model.categoryList[index].colorIndex]
                                .withOpacity(0.8),
                          ),
                          child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceAround,
                            children: [
                              ImageIcon(
                                iconList[categoryVM
                                        .model.categoryList[index].iconIndex]
                                    .image,
                                size: 20,
                                color: Colors.white,
                              ),
                              Text(
                                categoryVM.model.categoryList[index].title,
                                style: TextStyle(
                                  fontSize: 14,
                                  fontWeight: FontWeight.w300,
                                  color: Colors.white,
                                ),
                              ),
                            ],
                          ),
                        ),
                        itemCount: categoryVM.model.categoryList.length,
                      ),
                    ],
                  ),
                ));
          },
          child: Align(
            alignment: Alignment.centerRight,
            child: Container(
              alignment: Alignment.center,
              width: 100,
              padding: const EdgeInsets.all(8.0),
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(AppDimens.radius),
                color: taskVM.model.categoryModel.title.isEmpty
                    ? Colors.transparent
                    : colorList[taskVM.model.categoryModel.colorIndex]
                        .withOpacity(0.8),
              ),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: [
                  ImageIcon(
                    taskVM.model.categoryModel.title.isEmpty
                        ? MyIcons.tags.image
                        : iconList[taskVM.model.categoryModel.iconIndex].image,
                    size: 20,
                    color: taskVM.model.categoryModel.title.isEmpty
                        ? Colors.grey
                        : Colors.white,
                  ),
                  Text(
                    taskVM.model.categoryModel.title.isEmpty
                        ? 'انتخاب دسته بندی'
                        : taskVM.model.categoryModel.title,
                    style: TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.w300,
                      color: taskVM.model.categoryModel.title.isEmpty
                          ? Colors.grey
                          : Colors.white,
                    ),
                  ),
                ],
              ),
            ),
          ),
        );
      },
    );
  }
}

class TaskSinglePageCategory extends StatelessWidget {
  const TaskSinglePageCategory(
      {super.key,
      required this.title,
      required this.bgColor,
      required this.isEmpty,
      required this.icon,
      required this.onTap});

  final String title;
  final Color bgColor;
  final RxBool isEmpty;
  final ImageProvider icon;
  final Function() onTap;

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: onTap,
      child: Container(
        alignment: Alignment.center,
        width: 100,
        padding: const EdgeInsets.all(8.0),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(AppDimens.radius),
          color: isEmpty.value ? Colors.transparent : bgColor.withOpacity(0.8),
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            ImageIcon(
              isEmpty.value ? MyIcons.tags.image : icon,
              size: 20,
              color: isEmpty.value ? Colors.grey : Colors.white,
            ),
            Text(
              isEmpty.value ? 'انتخاب دسته بندی' : title,
              style: TextStyle(
                fontSize: 14,
                fontWeight: FontWeight.w300,
                color: isEmpty.value ? Colors.grey : Colors.white,
              ),
            ),
          ],
        ),
      ),
    );
  }
}
